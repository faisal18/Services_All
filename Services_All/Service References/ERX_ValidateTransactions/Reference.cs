//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services_All.ERX_ValidateTransactions {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.eClaimLink.ae/", ConfigurationName="ERX_ValidateTransactions.eRxValidateTransactionSoap")]
    public interface eRxValidateTransactionSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/UploadERxRequest", ReplyAction="*")]
        Services_All.ERX_ValidateTransactions.UploadERxRequestResponse UploadERxRequest(Services_All.ERX_ValidateTransactions.UploadERxRequestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/UploadERxRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.UploadERxRequestResponse> UploadERxRequestAsync(Services_All.ERX_ValidateTransactions.UploadERxRequestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/UploadERxAuthorization", ReplyAction="*")]
        Services_All.ERX_ValidateTransactions.UploadERxAuthorizationResponse UploadERxAuthorization(Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/UploadERxAuthorization", ReplyAction="*")]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.UploadERxAuthorizationResponse> UploadERxAuthorizationAsync(Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/DownloadTransactionFile", ReplyAction="*")]
        Services_All.ERX_ValidateTransactions.DownloadTransactionFileResponse DownloadTransactionFile(Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/DownloadTransactionFile", ReplyAction="*")]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.DownloadTransactionFileResponse> DownloadTransactionFileAsync(Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/GetNewTransactions", ReplyAction="*")]
        Services_All.ERX_ValidateTransactions.GetNewTransactionsResponse GetNewTransactions(Services_All.ERX_ValidateTransactions.GetNewTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/GetNewTransactions", ReplyAction="*")]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.GetNewTransactionsResponse> GetNewTransactionsAsync(Services_All.ERX_ValidateTransactions.GetNewTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/SearchTransactions", ReplyAction="*")]
        Services_All.ERX_ValidateTransactions.SearchTransactionsResponse SearchTransactions(Services_All.ERX_ValidateTransactions.SearchTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/SearchTransactions", ReplyAction="*")]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.SearchTransactionsResponse> SearchTransactionsAsync(Services_All.ERX_ValidateTransactions.SearchTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/SetTransactionDownloaded", ReplyAction="*")]
        Services_All.ERX_ValidateTransactions.SetTransactionDownloadedResponse SetTransactionDownloaded(Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/SetTransactionDownloaded", ReplyAction="*")]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.SetTransactionDownloadedResponse> SetTransactionDownloadedAsync(Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/GeteRxTransaction", ReplyAction="*")]
        Services_All.ERX_ValidateTransactions.GeteRxTransactionResponse GeteRxTransaction(Services_All.ERX_ValidateTransactions.GeteRxTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/GeteRxTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.GeteRxTransactionResponse> GeteRxTransactionAsync(Services_All.ERX_ValidateTransactions.GeteRxTransactionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadERxRequestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadERxRequest", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.UploadERxRequestRequestBody Body;
        
        public UploadERxRequestRequest() {
        }
        
        public UploadERxRequestRequest(Services_All.ERX_ValidateTransactions.UploadERxRequestRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class UploadERxRequestRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string facilityLogin;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string facilityPwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string clinicianLogin;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string clinicianPwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public byte[] fileContent;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string fileName;
        
        public UploadERxRequestRequestBody() {
        }
        
        public UploadERxRequestRequestBody(string facilityLogin, string facilityPwd, string clinicianLogin, string clinicianPwd, byte[] fileContent, string fileName) {
            this.facilityLogin = facilityLogin;
            this.facilityPwd = facilityPwd;
            this.clinicianLogin = clinicianLogin;
            this.clinicianPwd = clinicianPwd;
            this.fileContent = fileContent;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadERxRequestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadERxRequestResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.UploadERxRequestResponseBody Body;
        
        public UploadERxRequestResponse() {
        }
        
        public UploadERxRequestResponse(Services_All.ERX_ValidateTransactions.UploadERxRequestResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class UploadERxRequestResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int UploadERxRequestResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int eRxReferenceNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string errorMessage;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public byte[] errorReport;
        
        public UploadERxRequestResponseBody() {
        }
        
        public UploadERxRequestResponseBody(int UploadERxRequestResult, int eRxReferenceNo, string errorMessage, byte[] errorReport) {
            this.UploadERxRequestResult = UploadERxRequestResult;
            this.eRxReferenceNo = eRxReferenceNo;
            this.errorMessage = errorMessage;
            this.errorReport = errorReport;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadERxAuthorizationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadERxAuthorization", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequestBody Body;
        
        public UploadERxAuthorizationRequest() {
        }
        
        public UploadERxAuthorizationRequest(Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class UploadERxAuthorizationRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string PayerLogin;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string PayerPwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] fileContent;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fileName;
        
        public UploadERxAuthorizationRequestBody() {
        }
        
        public UploadERxAuthorizationRequestBody(string PayerLogin, string PayerPwd, byte[] fileContent, string fileName) {
            this.PayerLogin = PayerLogin;
            this.PayerPwd = PayerPwd;
            this.fileContent = fileContent;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadERxAuthorizationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadERxAuthorizationResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.UploadERxAuthorizationResponseBody Body;
        
        public UploadERxAuthorizationResponse() {
        }
        
        public UploadERxAuthorizationResponse(Services_All.ERX_ValidateTransactions.UploadERxAuthorizationResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class UploadERxAuthorizationResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int UploadERxAuthorizationResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string errorMessage;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] errorReport;
        
        public UploadERxAuthorizationResponseBody() {
        }
        
        public UploadERxAuthorizationResponseBody(int UploadERxAuthorizationResult, string errorMessage, byte[] errorReport) {
            this.UploadERxAuthorizationResult = UploadERxAuthorizationResult;
            this.errorMessage = errorMessage;
            this.errorReport = errorReport;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DownloadTransactionFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DownloadTransactionFile", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequestBody Body;
        
        public DownloadTransactionFileRequest() {
        }
        
        public DownloadTransactionFileRequest(Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class DownloadTransactionFileRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fileId;
        
        public DownloadTransactionFileRequestBody() {
        }
        
        public DownloadTransactionFileRequestBody(string login, string pwd, string fileId) {
            this.login = login;
            this.pwd = pwd;
            this.fileId = fileId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DownloadTransactionFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DownloadTransactionFileResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.DownloadTransactionFileResponseBody Body;
        
        public DownloadTransactionFileResponse() {
        }
        
        public DownloadTransactionFileResponse(Services_All.ERX_ValidateTransactions.DownloadTransactionFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class DownloadTransactionFileResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int DownloadTransactionFileResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fileName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] file;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string errorMessage;
        
        public DownloadTransactionFileResponseBody() {
        }
        
        public DownloadTransactionFileResponseBody(int DownloadTransactionFileResult, string fileName, byte[] file, string errorMessage) {
            this.DownloadTransactionFileResult = DownloadTransactionFileResult;
            this.fileName = fileName;
            this.file = file;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNewTransactionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNewTransactions", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.GetNewTransactionsRequestBody Body;
        
        public GetNewTransactionsRequest() {
        }
        
        public GetNewTransactionsRequest(Services_All.ERX_ValidateTransactions.GetNewTransactionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class GetNewTransactionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        public GetNewTransactionsRequestBody() {
        }
        
        public GetNewTransactionsRequestBody(string login, string pwd) {
            this.login = login;
            this.pwd = pwd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNewTransactionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNewTransactionsResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.GetNewTransactionsResponseBody Body;
        
        public GetNewTransactionsResponse() {
        }
        
        public GetNewTransactionsResponse(Services_All.ERX_ValidateTransactions.GetNewTransactionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class GetNewTransactionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GetNewTransactionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string xmlTransactions;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string errorMessage;
        
        public GetNewTransactionsResponseBody() {
        }
        
        public GetNewTransactionsResponseBody(int GetNewTransactionsResult, string xmlTransactions, string errorMessage) {
            this.GetNewTransactionsResult = GetNewTransactionsResult;
            this.xmlTransactions = xmlTransactions;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SearchTransactionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SearchTransactions", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.SearchTransactionsRequestBody Body;
        
        public SearchTransactionsRequest() {
        }
        
        public SearchTransactionsRequest(Services_All.ERX_ValidateTransactions.SearchTransactionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class SearchTransactionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int direction;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string callerLicense;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string clinicianLicense;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string memberID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<int> eRxReferenceNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int transactionStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string transactionFromDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string transactionToDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int minRecordCount;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int maxRecordCount;
        
        public SearchTransactionsRequestBody() {
        }
        
        public SearchTransactionsRequestBody(string login, string pwd, int direction, string callerLicense, string clinicianLicense, string memberID, System.Nullable<int> eRxReferenceNo, int transactionStatus, string transactionFromDate, string transactionToDate, int minRecordCount, int maxRecordCount) {
            this.login = login;
            this.pwd = pwd;
            this.direction = direction;
            this.callerLicense = callerLicense;
            this.clinicianLicense = clinicianLicense;
            this.memberID = memberID;
            this.eRxReferenceNo = eRxReferenceNo;
            this.transactionStatus = transactionStatus;
            this.transactionFromDate = transactionFromDate;
            this.transactionToDate = transactionToDate;
            this.minRecordCount = minRecordCount;
            this.maxRecordCount = maxRecordCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SearchTransactionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SearchTransactionsResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.SearchTransactionsResponseBody Body;
        
        public SearchTransactionsResponse() {
        }
        
        public SearchTransactionsResponse(Services_All.ERX_ValidateTransactions.SearchTransactionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class SearchTransactionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int SearchTransactionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string foundTransactions;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string errorMessage;
        
        public SearchTransactionsResponseBody() {
        }
        
        public SearchTransactionsResponseBody(int SearchTransactionsResult, string foundTransactions, string errorMessage) {
            this.SearchTransactionsResult = SearchTransactionsResult;
            this.foundTransactions = foundTransactions;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetTransactionDownloadedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetTransactionDownloaded", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequestBody Body;
        
        public SetTransactionDownloadedRequest() {
        }
        
        public SetTransactionDownloadedRequest(Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class SetTransactionDownloadedRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fileID;
        
        public SetTransactionDownloadedRequestBody() {
        }
        
        public SetTransactionDownloadedRequestBody(string login, string pwd, string fileID) {
            this.login = login;
            this.pwd = pwd;
            this.fileID = fileID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetTransactionDownloadedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetTransactionDownloadedResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.SetTransactionDownloadedResponseBody Body;
        
        public SetTransactionDownloadedResponse() {
        }
        
        public SetTransactionDownloadedResponse(Services_All.ERX_ValidateTransactions.SetTransactionDownloadedResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class SetTransactionDownloadedResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int SetTransactionDownloadedResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string errorMessage;
        
        public SetTransactionDownloadedResponseBody() {
        }
        
        public SetTransactionDownloadedResponseBody(int SetTransactionDownloadedResult, string errorMessage) {
            this.SetTransactionDownloadedResult = SetTransactionDownloadedResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GeteRxTransactionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GeteRxTransaction", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.GeteRxTransactionRequestBody Body;
        
        public GeteRxTransactionRequest() {
        }
        
        public GeteRxTransactionRequest(Services_All.ERX_ValidateTransactions.GeteRxTransactionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class GeteRxTransactionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string memberID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int eRxReferenceNo;
        
        public GeteRxTransactionRequestBody() {
        }
        
        public GeteRxTransactionRequestBody(string login, string pwd, string memberID, int eRxReferenceNo) {
            this.login = login;
            this.pwd = pwd;
            this.memberID = memberID;
            this.eRxReferenceNo = eRxReferenceNo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GeteRxTransactionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GeteRxTransactionResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public Services_All.ERX_ValidateTransactions.GeteRxTransactionResponseBody Body;
        
        public GeteRxTransactionResponse() {
        }
        
        public GeteRxTransactionResponse(Services_All.ERX_ValidateTransactions.GeteRxTransactionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    public partial class GeteRxTransactionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GeteRxTransactionResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string xmlTransactions;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string errorMessage;
        
        public GeteRxTransactionResponseBody() {
        }
        
        public GeteRxTransactionResponseBody(int GeteRxTransactionResult, string xmlTransactions, string errorMessage) {
            this.GeteRxTransactionResult = GeteRxTransactionResult;
            this.xmlTransactions = xmlTransactions;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface eRxValidateTransactionSoapChannel : Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class eRxValidateTransactionSoapClient : System.ServiceModel.ClientBase<Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap>, Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap {
        
        public eRxValidateTransactionSoapClient() {
        }
        
        public eRxValidateTransactionSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public eRxValidateTransactionSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public eRxValidateTransactionSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public eRxValidateTransactionSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services_All.ERX_ValidateTransactions.UploadERxRequestResponse Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.UploadERxRequest(Services_All.ERX_ValidateTransactions.UploadERxRequestRequest request) {
            return base.Channel.UploadERxRequest(request);
        }
        
        public int UploadERxRequest(string facilityLogin, string facilityPwd, string clinicianLogin, string clinicianPwd, byte[] fileContent, string fileName, out int eRxReferenceNo, out string errorMessage, out byte[] errorReport) {
            Services_All.ERX_ValidateTransactions.UploadERxRequestRequest inValue = new Services_All.ERX_ValidateTransactions.UploadERxRequestRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.UploadERxRequestRequestBody();
            inValue.Body.facilityLogin = facilityLogin;
            inValue.Body.facilityPwd = facilityPwd;
            inValue.Body.clinicianLogin = clinicianLogin;
            inValue.Body.clinicianPwd = clinicianPwd;
            inValue.Body.fileContent = fileContent;
            inValue.Body.fileName = fileName;
            Services_All.ERX_ValidateTransactions.UploadERxRequestResponse retVal = ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).UploadERxRequest(inValue);
            eRxReferenceNo = retVal.Body.eRxReferenceNo;
            errorMessage = retVal.Body.errorMessage;
            errorReport = retVal.Body.errorReport;
            return retVal.Body.UploadERxRequestResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.UploadERxRequestResponse> Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.UploadERxRequestAsync(Services_All.ERX_ValidateTransactions.UploadERxRequestRequest request) {
            return base.Channel.UploadERxRequestAsync(request);
        }
        
        public System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.UploadERxRequestResponse> UploadERxRequestAsync(string facilityLogin, string facilityPwd, string clinicianLogin, string clinicianPwd, byte[] fileContent, string fileName) {
            Services_All.ERX_ValidateTransactions.UploadERxRequestRequest inValue = new Services_All.ERX_ValidateTransactions.UploadERxRequestRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.UploadERxRequestRequestBody();
            inValue.Body.facilityLogin = facilityLogin;
            inValue.Body.facilityPwd = facilityPwd;
            inValue.Body.clinicianLogin = clinicianLogin;
            inValue.Body.clinicianPwd = clinicianPwd;
            inValue.Body.fileContent = fileContent;
            inValue.Body.fileName = fileName;
            return ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).UploadERxRequestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services_All.ERX_ValidateTransactions.UploadERxAuthorizationResponse Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.UploadERxAuthorization(Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequest request) {
            return base.Channel.UploadERxAuthorization(request);
        }
        
        public int UploadERxAuthorization(string PayerLogin, string PayerPwd, byte[] fileContent, string fileName, out string errorMessage, out byte[] errorReport) {
            Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequest inValue = new Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequestBody();
            inValue.Body.PayerLogin = PayerLogin;
            inValue.Body.PayerPwd = PayerPwd;
            inValue.Body.fileContent = fileContent;
            inValue.Body.fileName = fileName;
            Services_All.ERX_ValidateTransactions.UploadERxAuthorizationResponse retVal = ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).UploadERxAuthorization(inValue);
            errorMessage = retVal.Body.errorMessage;
            errorReport = retVal.Body.errorReport;
            return retVal.Body.UploadERxAuthorizationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.UploadERxAuthorizationResponse> Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.UploadERxAuthorizationAsync(Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequest request) {
            return base.Channel.UploadERxAuthorizationAsync(request);
        }
        
        public System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.UploadERxAuthorizationResponse> UploadERxAuthorizationAsync(string PayerLogin, string PayerPwd, byte[] fileContent, string fileName) {
            Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequest inValue = new Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.UploadERxAuthorizationRequestBody();
            inValue.Body.PayerLogin = PayerLogin;
            inValue.Body.PayerPwd = PayerPwd;
            inValue.Body.fileContent = fileContent;
            inValue.Body.fileName = fileName;
            return ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).UploadERxAuthorizationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services_All.ERX_ValidateTransactions.DownloadTransactionFileResponse Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.DownloadTransactionFile(Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequest request) {
            return base.Channel.DownloadTransactionFile(request);
        }
        
        public int DownloadTransactionFile(string login, string pwd, string fileId, out string fileName, out byte[] file, out string errorMessage) {
            Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequest inValue = new Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.fileId = fileId;
            Services_All.ERX_ValidateTransactions.DownloadTransactionFileResponse retVal = ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).DownloadTransactionFile(inValue);
            fileName = retVal.Body.fileName;
            file = retVal.Body.file;
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.DownloadTransactionFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.DownloadTransactionFileResponse> Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.DownloadTransactionFileAsync(Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequest request) {
            return base.Channel.DownloadTransactionFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.DownloadTransactionFileResponse> DownloadTransactionFileAsync(string login, string pwd, string fileId) {
            Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequest inValue = new Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.DownloadTransactionFileRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.fileId = fileId;
            return ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).DownloadTransactionFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services_All.ERX_ValidateTransactions.GetNewTransactionsResponse Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.GetNewTransactions(Services_All.ERX_ValidateTransactions.GetNewTransactionsRequest request) {
            return base.Channel.GetNewTransactions(request);
        }
        
        public int GetNewTransactions(string login, string pwd, out string xmlTransactions, out string errorMessage) {
            Services_All.ERX_ValidateTransactions.GetNewTransactionsRequest inValue = new Services_All.ERX_ValidateTransactions.GetNewTransactionsRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.GetNewTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            Services_All.ERX_ValidateTransactions.GetNewTransactionsResponse retVal = ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).GetNewTransactions(inValue);
            xmlTransactions = retVal.Body.xmlTransactions;
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.GetNewTransactionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.GetNewTransactionsResponse> Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.GetNewTransactionsAsync(Services_All.ERX_ValidateTransactions.GetNewTransactionsRequest request) {
            return base.Channel.GetNewTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.GetNewTransactionsResponse> GetNewTransactionsAsync(string login, string pwd) {
            Services_All.ERX_ValidateTransactions.GetNewTransactionsRequest inValue = new Services_All.ERX_ValidateTransactions.GetNewTransactionsRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.GetNewTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            return ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).GetNewTransactionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services_All.ERX_ValidateTransactions.SearchTransactionsResponse Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.SearchTransactions(Services_All.ERX_ValidateTransactions.SearchTransactionsRequest request) {
            return base.Channel.SearchTransactions(request);
        }
        
        public int SearchTransactions(string login, string pwd, int direction, string callerLicense, string clinicianLicense, string memberID, System.Nullable<int> eRxReferenceNo, int transactionStatus, string transactionFromDate, string transactionToDate, int minRecordCount, int maxRecordCount, out string foundTransactions, out string errorMessage) {
            Services_All.ERX_ValidateTransactions.SearchTransactionsRequest inValue = new Services_All.ERX_ValidateTransactions.SearchTransactionsRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.SearchTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.direction = direction;
            inValue.Body.callerLicense = callerLicense;
            inValue.Body.clinicianLicense = clinicianLicense;
            inValue.Body.memberID = memberID;
            inValue.Body.eRxReferenceNo = eRxReferenceNo;
            inValue.Body.transactionStatus = transactionStatus;
            inValue.Body.transactionFromDate = transactionFromDate;
            inValue.Body.transactionToDate = transactionToDate;
            inValue.Body.minRecordCount = minRecordCount;
            inValue.Body.maxRecordCount = maxRecordCount;
            Services_All.ERX_ValidateTransactions.SearchTransactionsResponse retVal = ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).SearchTransactions(inValue);
            foundTransactions = retVal.Body.foundTransactions;
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.SearchTransactionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.SearchTransactionsResponse> Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.SearchTransactionsAsync(Services_All.ERX_ValidateTransactions.SearchTransactionsRequest request) {
            return base.Channel.SearchTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.SearchTransactionsResponse> SearchTransactionsAsync(string login, string pwd, int direction, string callerLicense, string clinicianLicense, string memberID, System.Nullable<int> eRxReferenceNo, int transactionStatus, string transactionFromDate, string transactionToDate, int minRecordCount, int maxRecordCount) {
            Services_All.ERX_ValidateTransactions.SearchTransactionsRequest inValue = new Services_All.ERX_ValidateTransactions.SearchTransactionsRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.SearchTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.direction = direction;
            inValue.Body.callerLicense = callerLicense;
            inValue.Body.clinicianLicense = clinicianLicense;
            inValue.Body.memberID = memberID;
            inValue.Body.eRxReferenceNo = eRxReferenceNo;
            inValue.Body.transactionStatus = transactionStatus;
            inValue.Body.transactionFromDate = transactionFromDate;
            inValue.Body.transactionToDate = transactionToDate;
            inValue.Body.minRecordCount = minRecordCount;
            inValue.Body.maxRecordCount = maxRecordCount;
            return ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).SearchTransactionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services_All.ERX_ValidateTransactions.SetTransactionDownloadedResponse Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.SetTransactionDownloaded(Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequest request) {
            return base.Channel.SetTransactionDownloaded(request);
        }
        
        public int SetTransactionDownloaded(string login, string pwd, string fileID, out string errorMessage) {
            Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequest inValue = new Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.fileID = fileID;
            Services_All.ERX_ValidateTransactions.SetTransactionDownloadedResponse retVal = ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).SetTransactionDownloaded(inValue);
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.SetTransactionDownloadedResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.SetTransactionDownloadedResponse> Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.SetTransactionDownloadedAsync(Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequest request) {
            return base.Channel.SetTransactionDownloadedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.SetTransactionDownloadedResponse> SetTransactionDownloadedAsync(string login, string pwd, string fileID) {
            Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequest inValue = new Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.SetTransactionDownloadedRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.fileID = fileID;
            return ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).SetTransactionDownloadedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Services_All.ERX_ValidateTransactions.GeteRxTransactionResponse Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.GeteRxTransaction(Services_All.ERX_ValidateTransactions.GeteRxTransactionRequest request) {
            return base.Channel.GeteRxTransaction(request);
        }
        
        public int GeteRxTransaction(string login, string pwd, string memberID, int eRxReferenceNo, out string xmlTransactions, out string errorMessage) {
            Services_All.ERX_ValidateTransactions.GeteRxTransactionRequest inValue = new Services_All.ERX_ValidateTransactions.GeteRxTransactionRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.GeteRxTransactionRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.memberID = memberID;
            inValue.Body.eRxReferenceNo = eRxReferenceNo;
            Services_All.ERX_ValidateTransactions.GeteRxTransactionResponse retVal = ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).GeteRxTransaction(inValue);
            xmlTransactions = retVal.Body.xmlTransactions;
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.GeteRxTransactionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.GeteRxTransactionResponse> Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap.GeteRxTransactionAsync(Services_All.ERX_ValidateTransactions.GeteRxTransactionRequest request) {
            return base.Channel.GeteRxTransactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Services_All.ERX_ValidateTransactions.GeteRxTransactionResponse> GeteRxTransactionAsync(string login, string pwd, string memberID, int eRxReferenceNo) {
            Services_All.ERX_ValidateTransactions.GeteRxTransactionRequest inValue = new Services_All.ERX_ValidateTransactions.GeteRxTransactionRequest();
            inValue.Body = new Services_All.ERX_ValidateTransactions.GeteRxTransactionRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.memberID = memberID;
            inValue.Body.eRxReferenceNo = eRxReferenceNo;
            return ((Services_All.ERX_ValidateTransactions.eRxValidateTransactionSoap)(this)).GeteRxTransactionAsync(inValue);
        }
    }
}
