//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services_All.MedService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberEligibilityRequest", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class MemberEligibilityRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string HealthCardNumberField;
        
        private string SenderIDField;
        
        private string SourceSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string HealthCardNumber {
            get {
                return this.HealthCardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthCardNumberField, value) != true)) {
                    this.HealthCardNumberField = value;
                    this.RaisePropertyChanged("HealthCardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SenderID {
            get {
                return this.SenderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderIDField, value) != true)) {
                    this.SenderIDField = value;
                    this.RaisePropertyChanged("SenderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SourceSystem {
            get {
                return this.SourceSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceSystemField, value) != true)) {
                    this.SourceSystemField = value;
                    this.RaisePropertyChanged("SourceSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberEligibilityResponse", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class MemberEligibilityResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.HealthCardDetail HealthCardDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.MemberDetail MemberDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.NetworkDetail NetworkDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.PolicyDetail PolicyDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.ValidationResult ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.HealthCardDetail HealthCardDetails {
            get {
                return this.HealthCardDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthCardDetailsField, value) != true)) {
                    this.HealthCardDetailsField = value;
                    this.RaisePropertyChanged("HealthCardDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.MemberDetail MemberDetails {
            get {
                return this.MemberDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberDetailsField, value) != true)) {
                    this.MemberDetailsField = value;
                    this.RaisePropertyChanged("MemberDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.NetworkDetail NetworkDetails {
            get {
                return this.NetworkDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkDetailsField, value) != true)) {
                    this.NetworkDetailsField = value;
                    this.RaisePropertyChanged("NetworkDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.PolicyDetail PolicyDetails {
            get {
                return this.PolicyDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyDetailsField, value) != true)) {
                    this.PolicyDetailsField = value;
                    this.RaisePropertyChanged("PolicyDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.ValidationResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HealthCardDetail", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class HealthCardDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssueDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssueDate {
            get {
                return this.IssueDateField;
            }
            set {
                if ((this.IssueDateField.Equals(value) != true)) {
                    this.IssueDateField = value;
                    this.RaisePropertyChanged("IssueDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberDetail", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class MemberDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmiratesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmiratesID {
            get {
                return this.EmiratesIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmiratesIDField, value) != true)) {
                    this.EmiratesIDField = value;
                    this.RaisePropertyChanged("EmiratesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNumber {
            get {
                return this.MobileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNumberField, value) != true)) {
                    this.MobileNumberField = value;
                    this.RaisePropertyChanged("MobileNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetworkDetail", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class NetworkDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EligibilityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EligibilityFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EligibilityResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EligibilityDescription {
            get {
                return this.EligibilityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EligibilityDescriptionField, value) != true)) {
                    this.EligibilityDescriptionField = value;
                    this.RaisePropertyChanged("EligibilityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EligibilityFlag {
            get {
                return this.EligibilityFlagField;
            }
            set {
                if ((this.EligibilityFlagField.Equals(value) != true)) {
                    this.EligibilityFlagField = value;
                    this.RaisePropertyChanged("EligibilityFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EligibilityResponseCode {
            get {
                return this.EligibilityResponseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EligibilityResponseCodeField, value) != true)) {
                    this.EligibilityResponseCodeField = value;
                    this.RaisePropertyChanged("EligibilityResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyDetail", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class PolicyDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupPolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBupaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDependentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManualProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberBenefitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetworkTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WaitingPeriodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupPolicyId {
            get {
                return this.GroupPolicyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupPolicyIdField, value) != true)) {
                    this.GroupPolicyIdField = value;
                    this.RaisePropertyChanged("GroupPolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBupa {
            get {
                return this.IsBupaField;
            }
            set {
                if ((this.IsBupaField.Equals(value) != true)) {
                    this.IsBupaField = value;
                    this.RaisePropertyChanged("IsBupa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDependent {
            get {
                return this.IsDependentField;
            }
            set {
                if ((this.IsDependentField.Equals(value) != true)) {
                    this.IsDependentField = value;
                    this.RaisePropertyChanged("IsDependent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManualProcess {
            get {
                return this.IsManualProcessField;
            }
            set {
                if ((this.IsManualProcessField.Equals(value) != true)) {
                    this.IsManualProcessField = value;
                    this.RaisePropertyChanged("IsManualProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVIP {
            get {
                return this.IsVIPField;
            }
            set {
                if ((this.IsVIPField.Equals(value) != true)) {
                    this.IsVIPField = value;
                    this.RaisePropertyChanged("IsVIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberBenefits {
            get {
                return this.MemberBenefitsField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberBenefitsField, value) != true)) {
                    this.MemberBenefitsField = value;
                    this.RaisePropertyChanged("MemberBenefits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetworkType {
            get {
                return this.NetworkTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkTypeField, value) != true)) {
                    this.NetworkTypeField = value;
                    this.RaisePropertyChanged("NetworkType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyName {
            get {
                return this.PolicyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNameField, value) != true)) {
                    this.PolicyNameField = value;
                    this.RaisePropertyChanged("PolicyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WaitingPeriod {
            get {
                return this.WaitingPeriodField;
            }
            set {
                if ((this.WaitingPeriodField.Equals(value) != true)) {
                    this.WaitingPeriodField = value;
                    this.RaisePropertyChanged("WaitingPeriod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationResult", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class ValidationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription {
            get {
                return this.StatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescriptionField, value) != true)) {
                    this.StatusDescriptionField = value;
                    this.RaisePropertyChanged("StatusDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PriorAuthorizationResponse", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class PriorAuthorizationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.BenefitGroup[] BenefitGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.FeeGuide[] FeeGuideListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.MessageContext RequestContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.ValidationResult ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.BenefitGroup[] BenefitGroups {
            get {
                return this.BenefitGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefitGroupsField, value) != true)) {
                    this.BenefitGroupsField = value;
                    this.RaisePropertyChanged("BenefitGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.FeeGuide[] FeeGuideList {
            get {
                return this.FeeGuideListField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeGuideListField, value) != true)) {
                    this.FeeGuideListField = value;
                    this.RaisePropertyChanged("FeeGuideList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.MessageContext RequestContext {
            get {
                return this.RequestContextField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestContextField, value) != true)) {
                    this.RequestContextField = value;
                    this.RaisePropertyChanged("RequestContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.ValidationResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageContext", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class MessageContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnvironmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiresOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MessageSentOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReplyOfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReplyToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Environment {
            get {
                return this.EnvironmentField;
            }
            set {
                if ((object.ReferenceEquals(this.EnvironmentField, value) != true)) {
                    this.EnvironmentField = value;
                    this.RaisePropertyChanged("Environment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiresOn {
            get {
                return this.ExpiresOnField;
            }
            set {
                if ((this.ExpiresOnField.Equals(value) != true)) {
                    this.ExpiresOnField = value;
                    this.RaisePropertyChanged("ExpiresOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MessageSentOn {
            get {
                return this.MessageSentOnField;
            }
            set {
                if ((this.MessageSentOnField.Equals(value) != true)) {
                    this.MessageSentOnField = value;
                    this.RaisePropertyChanged("MessageSentOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTypeField, value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageUID {
            get {
                return this.MessageUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageUIDField, value) != true)) {
                    this.MessageUIDField = value;
                    this.RaisePropertyChanged("MessageUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Originator {
            get {
                return this.OriginatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginatorField, value) != true)) {
                    this.OriginatorField = value;
                    this.RaisePropertyChanged("Originator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplyOf {
            get {
                return this.ReplyOfField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplyOfField, value) != true)) {
                    this.ReplyOfField = value;
                    this.RaisePropertyChanged("ReplyOf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplyTo {
            get {
                return this.ReplyToField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplyToField, value) != true)) {
                    this.ReplyToField = value;
                    this.RaisePropertyChanged("ReplyTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionType {
            get {
                return this.TransactionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTypeField, value) != true)) {
                    this.TransactionTypeField = value;
                    this.RaisePropertyChanged("TransactionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BenefitGroup", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class BenefitGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.CoverBenefit[] CoverBenefitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityCode {
            get {
                return this.ActivityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityCodeField, value) != true)) {
                    this.ActivityCodeField = value;
                    this.RaisePropertyChanged("ActivityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityIdField, value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.CoverBenefit[] CoverBenefits {
            get {
                return this.CoverBenefitsField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverBenefitsField, value) != true)) {
                    this.CoverBenefitsField = value;
                    this.RaisePropertyChanged("CoverBenefits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeeGuide", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class FeeGuide : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenefitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenefitFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenefitTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Benefit {
            get {
                return this.BenefitField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefitField, value) != true)) {
                    this.BenefitField = value;
                    this.RaisePropertyChanged("Benefit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenefitFee {
            get {
                return this.BenefitFeeField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefitFeeField, value) != true)) {
                    this.BenefitFeeField = value;
                    this.RaisePropertyChanged("BenefitFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenefitType {
            get {
                return this.BenefitTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefitTypeField, value) != true)) {
                    this.BenefitTypeField = value;
                    this.RaisePropertyChanged("BenefitType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoverBenefit", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class CoverBenefit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AggregateLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoinsuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoinsuranceCapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CopayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoverLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoverUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FullUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCoveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LimitAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WaitingPeriodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessType {
            get {
                return this.AccessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTypeField, value) != true)) {
                    this.AccessTypeField = value;
                    this.RaisePropertyChanged("AccessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AggregateLimit {
            get {
                return this.AggregateLimitField;
            }
            set {
                if ((this.AggregateLimitField.Equals(value) != true)) {
                    this.AggregateLimitField = value;
                    this.RaisePropertyChanged("AggregateLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingMode {
            get {
                return this.BillingModeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingModeField, value) != true)) {
                    this.BillingModeField = value;
                    this.RaisePropertyChanged("BillingMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Coinsurance {
            get {
                return this.CoinsuranceField;
            }
            set {
                if ((this.CoinsuranceField.Equals(value) != true)) {
                    this.CoinsuranceField = value;
                    this.RaisePropertyChanged("Coinsurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CoinsuranceCap {
            get {
                return this.CoinsuranceCapField;
            }
            set {
                if ((this.CoinsuranceCapField.Equals(value) != true)) {
                    this.CoinsuranceCapField = value;
                    this.RaisePropertyChanged("CoinsuranceCap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Copay {
            get {
                return this.CopayField;
            }
            set {
                if ((this.CopayField.Equals(value) != true)) {
                    this.CopayField = value;
                    this.RaisePropertyChanged("Copay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverCode {
            get {
                return this.CoverCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverCodeField, value) != true)) {
                    this.CoverCodeField = value;
                    this.RaisePropertyChanged("CoverCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CoverLimit {
            get {
                return this.CoverLimitField;
            }
            set {
                if ((this.CoverLimitField.Equals(value) != true)) {
                    this.CoverLimitField = value;
                    this.RaisePropertyChanged("CoverLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverName {
            get {
                return this.CoverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverNameField, value) != true)) {
                    this.CoverNameField = value;
                    this.RaisePropertyChanged("CoverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CoverUtilized {
            get {
                return this.CoverUtilizedField;
            }
            set {
                if ((this.CoverUtilizedField.Equals(value) != true)) {
                    this.CoverUtilizedField = value;
                    this.RaisePropertyChanged("CoverUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FullUtilized {
            get {
                return this.FullUtilizedField;
            }
            set {
                if ((this.FullUtilizedField.Equals(value) != true)) {
                    this.FullUtilizedField = value;
                    this.RaisePropertyChanged("FullUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCovered {
            get {
                return this.IsCoveredField;
            }
            set {
                if ((this.IsCoveredField.Equals(value) != true)) {
                    this.IsCoveredField = value;
                    this.RaisePropertyChanged("IsCovered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LimitAmount {
            get {
                return this.LimitAmountField;
            }
            set {
                if ((this.LimitAmountField.Equals(value) != true)) {
                    this.LimitAmountField = value;
                    this.RaisePropertyChanged("LimitAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeField, value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseMessage {
            get {
                return this.ResponseMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseMessageField, value) != true)) {
                    this.ResponseMessageField = value;
                    this.RaisePropertyChanged("ResponseMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemMessage {
            get {
                return this.SystemMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemMessageField, value) != true)) {
                    this.SystemMessageField = value;
                    this.RaisePropertyChanged("SystemMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WaitingPeriod {
            get {
                return this.WaitingPeriodField;
            }
            set {
                if ((this.WaitingPeriodField.Equals(value) != true)) {
                    this.WaitingPeriodField = value;
                    this.RaisePropertyChanged("WaitingPeriod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BenefitFeeGuideResponse", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class BenefitFeeGuideResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.BenefitFeeGuide[] FeeGuidesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.MessageContext RequestContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.ValidationResult ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.BenefitFeeGuide[] FeeGuides {
            get {
                return this.FeeGuidesField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeGuidesField, value) != true)) {
                    this.FeeGuidesField = value;
                    this.RaisePropertyChanged("FeeGuides");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.MessageContext RequestContext {
            get {
                return this.RequestContextField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestContextField, value) != true)) {
                    this.RequestContextField = value;
                    this.RaisePropertyChanged("RequestContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.ValidationResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BenefitFeeGuide", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class BenefitFeeGuide : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenefitFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenefitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenefitTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenefitFee {
            get {
                return this.BenefitFeeField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefitFeeField, value) != true)) {
                    this.BenefitFeeField = value;
                    this.RaisePropertyChanged("BenefitFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenefitId {
            get {
                return this.BenefitIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefitIdField, value) != true)) {
                    this.BenefitIdField = value;
                    this.RaisePropertyChanged("BenefitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenefitType {
            get {
                return this.BenefitTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefitTypeField, value) != true)) {
                    this.BenefitTypeField = value;
                    this.RaisePropertyChanged("BenefitType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyDocumentRequest", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class PolicyDocumentRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CountryIsoCodeField;
        
        private string PolicyNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CountryIsoCode {
            get {
                return this.CountryIsoCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIsoCodeField, value) != true)) {
                    this.CountryIsoCodeField = value;
                    this.RaisePropertyChanged("CountryIsoCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyDocumentResponse", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class PolicyDocumentResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.PolicyDocument[] PolicyDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services_All.MedService.ValidationResult ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.PolicyDocument[] PolicyDocuments {
            get {
                return this.PolicyDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyDocumentsField, value) != true)) {
                    this.PolicyDocumentsField = value;
                    this.RaisePropertyChanged("PolicyDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services_All.MedService.ValidationResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolicyDocument", Namespace="medservice.tameen.ae")]
    [System.SerializableAttribute()]
    public partial class PolicyDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DocumentContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DocumentContents {
            get {
                return this.DocumentContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentContentsField, value) != true)) {
                    this.DocumentContentsField = value;
                    this.RaisePropertyChanged("DocumentContents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="medservice.tameen.ae", ConfigurationName="MedService.IMedicalService")]
    public interface IMedicalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="medservice.tameen.ae/IMedicalService/CheckMemberEligibility", ReplyAction="medservice.tameen.ae/IMedicalService/CheckMemberEligibilityResponse")]
        Services_All.MedService.MemberEligibilityResponse CheckMemberEligibility(Services_All.MedService.MemberEligibilityRequest eligibilityRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="medservice.tameen.ae/IMedicalService/CheckMemberEligibility", ReplyAction="medservice.tameen.ae/IMedicalService/CheckMemberEligibilityResponse")]
        System.Threading.Tasks.Task<Services_All.MedService.MemberEligibilityResponse> CheckMemberEligibilityAsync(Services_All.MedService.MemberEligibilityRequest eligibilityRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="medservice.tameen.ae/IMedicalService/GetCoverAndLimit", ReplyAction="medservice.tameen.ae/IMedicalService/GetCoverAndLimitResponse")]
        Services_All.MedService.PriorAuthorizationResponse GetCoverAndLimit(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="medservice.tameen.ae/IMedicalService/GetCoverAndLimit", ReplyAction="medservice.tameen.ae/IMedicalService/GetCoverAndLimitResponse")]
        System.Threading.Tasks.Task<Services_All.MedService.PriorAuthorizationResponse> GetCoverAndLimitAsync(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="medservice.tameen.ae/IMedicalService/GetBenefitFeeGuide", ReplyAction="medservice.tameen.ae/IMedicalService/GetBenefitFeeGuideResponse")]
        Services_All.MedService.BenefitFeeGuideResponse GetBenefitFeeGuide(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="medservice.tameen.ae/IMedicalService/GetBenefitFeeGuide", ReplyAction="medservice.tameen.ae/IMedicalService/GetBenefitFeeGuideResponse")]
        System.Threading.Tasks.Task<Services_All.MedService.BenefitFeeGuideResponse> GetBenefitFeeGuideAsync(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="medservice.tameen.ae/IMedicalService/GetPolicyDocument", ReplyAction="medservice.tameen.ae/IMedicalService/GetPolicyDocumentResponse")]
        Services_All.MedService.PolicyDocumentResponse GetPolicyDocument(Services_All.MedService.PolicyDocumentRequest policyDocumentRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="medservice.tameen.ae/IMedicalService/GetPolicyDocument", ReplyAction="medservice.tameen.ae/IMedicalService/GetPolicyDocumentResponse")]
        System.Threading.Tasks.Task<Services_All.MedService.PolicyDocumentResponse> GetPolicyDocumentAsync(Services_All.MedService.PolicyDocumentRequest policyDocumentRequest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMedicalServiceChannel : Services_All.MedService.IMedicalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceClient : System.ServiceModel.ClientBase<Services_All.MedService.IMedicalService>, Services_All.MedService.IMedicalService {
        
        public MedicalServiceClient() {
        }
        
        public MedicalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MedicalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Services_All.MedService.MemberEligibilityResponse CheckMemberEligibility(Services_All.MedService.MemberEligibilityRequest eligibilityRequest) {
            return base.Channel.CheckMemberEligibility(eligibilityRequest);
        }
        
        public System.Threading.Tasks.Task<Services_All.MedService.MemberEligibilityResponse> CheckMemberEligibilityAsync(Services_All.MedService.MemberEligibilityRequest eligibilityRequest) {
            return base.Channel.CheckMemberEligibilityAsync(eligibilityRequest);
        }
        
        public Services_All.MedService.PriorAuthorizationResponse GetCoverAndLimit(string request) {
            return base.Channel.GetCoverAndLimit(request);
        }
        
        public System.Threading.Tasks.Task<Services_All.MedService.PriorAuthorizationResponse> GetCoverAndLimitAsync(string request) {
            return base.Channel.GetCoverAndLimitAsync(request);
        }
        
        public Services_All.MedService.BenefitFeeGuideResponse GetBenefitFeeGuide(string request) {
            return base.Channel.GetBenefitFeeGuide(request);
        }
        
        public System.Threading.Tasks.Task<Services_All.MedService.BenefitFeeGuideResponse> GetBenefitFeeGuideAsync(string request) {
            return base.Channel.GetBenefitFeeGuideAsync(request);
        }
        
        public Services_All.MedService.PolicyDocumentResponse GetPolicyDocument(Services_All.MedService.PolicyDocumentRequest policyDocumentRequest) {
            return base.Channel.GetPolicyDocument(policyDocumentRequest);
        }
        
        public System.Threading.Tasks.Task<Services_All.MedService.PolicyDocumentResponse> GetPolicyDocumentAsync(Services_All.MedService.PolicyDocumentRequest policyDocumentRequest) {
            return base.Channel.GetPolicyDocumentAsync(policyDocumentRequest);
        }
    }
}
